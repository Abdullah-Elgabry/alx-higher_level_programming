The ``100-matrix_mul`` module
============================

Using ``matrix_mul``
---------------------

Import module:
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

the try no 2 bad matrices:
    >>> matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: mbx and mtx can't be multiplied

the try no 2 ok matrices:
    >>> matrix_mul([[1, 2], [3, 4], [3, 4]], [[5, 6, 1], [7, 8, 2]])
    [[19, 22, 5], [43, 50, 11], [43, 50, 11]]

the try no singly empty matrix:
    >>> matrix_mul([], [[3]])
    Traceback (most recent call last):
    ...
    ValueError: mbx can't be empty

the try no singly empty matrix:
    >>> matrix_mul([[]], [[3]])
    Traceback (most recent call last):
    ...
    ValueError: mbx can't be empty

the try no singly empty matrix 2:
    >>> matrix_mul([[4]], [])
    Traceback (most recent call last):
    ...
    ValueError: mtx can't be empty

the try no doubly empty matrix:
    >>> matrix_mul([[3]], [[]])
    Traceback (most recent call last):
    ...
    ValueError: mtx can't be empty

the try no simple case:
    >>> matrix_mul([[3]], [[9]])
    [[27]]

the try no string arg:
    >>> matrix_mul("foo", [[9]])
    Traceback (most recent call last):
    ...
    TypeError: mbx must be a list

the try no string arg:
    >>> matrix_mul([[8]], "bar")
    Traceback (most recent call last):
    ...
    TypeError: mtx must be a list

the try no int list:
    >>> matrix_mul([1, 3, 4], [[9]])
    Traceback (most recent call last):
    ...
    TypeError: mbx must be a list of lists

the try no int list 2:
    >>> matrix_mul([[8]], [2, 4, 6])
    Traceback (most recent call last):
    ...
    TypeError: mtx must be a list of lists

the try no notnum list:
    >>> matrix_mul([["foo"]], [[2, 4, 6]])
    Traceback (most recent call last):
    ...
    TypeError: mbx should contain only integers or floats

the try no notnum list 2 :
    >>> matrix_mul([[2, 4, 6]], [["foo"]])
    Traceback (most recent call last):
    ...
    TypeError: mtx should contain only integers or floats

the try no a bad rows:
    >>> matrix_mul([[1, 2], [3, 4, 5], [3, 4]], [[5, 6, 1], [7, 8, 2]])
    Traceback (most recent call last):
    ...
    TypeError: each row of mbx must should be of the same size

the try no b bad rows:
    >>> matrix_mul([[1, 2], [3, 4], [3, 4]], [[5, 6, 1], [7, 2]])
    Traceback (most recent call last):
    ...
    TypeError: each row of mtx must should be of the same size

the try no missing 1 arg:
    >>> matrix_mul([[3]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 1 required positional argument: 'mtx'

the try no missing 2 args:
    >>> matrix_mul()
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 2 required positional arguments: 'mbx' and 'mtx'
